---
version: "3"

services:
  nginx:
    image: nginx:mainline-alpine
    ports:
      - 13448:443
      - 10808:80
    environment:
      - "NGINX_SSL_CERTIFICATE=/etc/letsencrypt/live/lymer.ca/fullchain.pem"
      - "NGINX_SSL_CERTIFICATE_KEY=/etc/letsencrypt/live/lymer.ca/privkey.pem"
    volumes:
      - ./workloads/nginx/docker-entrypoint.d/50-hot-reload.sh:/docker-entrypoint.d/50-hot-reload.sh:ro
      - ./workloads/nginx/conf.d/custom:/etc/nginx/conf.d/custom:ro
      - ./workloads/nginx/templates:/etc/nginx/templates:ro
      - ./docker/data/etc/letsencrypt:/etc/letsencrypt:ro

  certbot:
    image: certbot/dns-google
    volumes:
      - ./docker/data/etc/letsencrypt/:/etc/letsencrypt
      - ~/.config/gcloud/application_default_credentials.json:/root/.config/gcloud/application_default_credentials.json:ro
    entrypoint:
      - sh
      - -c
      - |
        trap exit INT TERM
        while true; do
          certbot certonly \
            --agree-tos \
            --noninteractive \
            --preferred-challenges dns \
            --domain "*.lymer.ca" \
            --dns-google \
            --dns-google-project matthewlymer-production
          sleep 12h
        done &
        wait

  homelink:
    build:
      context: workloads/homelink
      dockerfile: ./Dockerfile
    volumes:
      - ~/.config/gcloud/application_default_credentials.json:/root/.config/gcloud/application_default_credentials.json:ro
    environment:
      - "CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=/root/.config/gcloud/application_default_credentials.json"
      - "GOOGLE_PROJECT=matthewlymer-production"
      - "DNS_NAME=*.lymer.ca."
      - "ZONE=lymer-ca"
    entrypoint:
      - sh
      - -c
      - |
        trap exit INT TERM
        while true; do
          ./update-dns-records.sh
          sleep 15m
        done &
        wait

  actual:
    image: actualbudget/actual-server:sha-3cab9a3-alpine # May 11, 2025 at 8:57 pm
    volumes:
      - ./workloads/actual/data:/data

  jellyfin:
    image: jellyfin/jellyfin
    volumes:
      - ./workloads/jellyfin/data/config:/config
      - ./workloads/jellyfin/data/cache:/cache
      - ./workloads/jellyfin/data/media/music:/media/music:ro
      - ./workloads/jellyfin/data/media/torrents:/media/torrents:ro

#   immich-server:
#     image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
#     # extends:
#     #   file: hwaccel.transcoding.yml
#     #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
#     volumes:
#       # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
#       # - ${UPLOAD_LOCATION}:/usr/src/app/upload
#       - ./workloads/immich/data/upload:/usr/src/app/upload
#       # - /etc/localtime:/etc/localtime:ro
#     environment:
#       - DB_USERNAME=postgres
#       - DB_PASSWORD=postgres
#       - DB_HOSTNAME=immich-database
#       - DB_DATABASE_NAME=immich
#       - REDIS_HOSTNAME=immich-redis
#       - IMMICH_MACHINE_LEARNING_URL=false
#     # env_file:
#     #   - .env
#     ports:
#       - '2283:2283'
#     depends_on:
#       - immich-redis
#       - immich-database
#     restart: always
#     healthcheck:
#       disable: false

#   # immich-machine-learning:
#   #   container_name: immich_machine_learning
#   #   # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
#   #   # Example tag: ${IMMICH_VERSION:-release}-cuda
#   #   image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
#   #   # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
#   #   #   file: hwaccel.ml.yml
#   #   #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
#   #   volumes:
#   #     - model-cache:/cache
#   #   env_file:
#   #     - .env
#   #   restart: always
#   #   healthcheck:
#   #     disable: false

#   immich-redis:
#     image: docker.io/valkey/valkey:8-bookworm@sha256:ff21bc0f8194dc9c105b769aeabf9585fea6a8ed649c0781caeac5cb3c247884
#     healthcheck:
#       test: redis-cli ping || exit 1
#     restart: always

#   immich-database:
#     image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0@sha256:fa4f6e0971f454cd95fec5a9aaed2ed93d8f46725cc6bc61e0698e97dba96da1
#     environment:
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_USER: postgres
#       POSTGRES_DB: immich
#       POSTGRES_INITDB_ARGS: '--data-checksums'
#       # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
#       # DB_STORAGE_TYPE: 'HDD'
#     volumes:
#       - ./workloads/immich/data/db:/var/lib/postgresql/data
#     restart: always

# # volumes:
# #   model-cache:
